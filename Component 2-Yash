App.js -: import React, { useEffect, useRef } from 'react';
import { gsap } from 'gsap';
import './App.css';

function App() {
  return (
    <div className="App">
      <h1>GSAP Animated Buttons</h1>
      <ButtonContainer />
    </div>
  );
}

const ButtonContainer = () => {
  const buttonRefs = {
    button1: useRef(null),
    button2: useRef(null),
    button3: useRef(null),
    button3Overlay: useRef(null),
    button4: useRef(null),
    button4Border: useRef(null),
    button5: useRef(null),
    button5BgFill: useRef(null),
    button6: useRef(null),
    button7: useRef(null),
    button8: useRef(null)
  };

  useEffect(() => {
    // Button 1 animations
    const button1 = buttonRefs.button1.current;
    button1.addEventListener("mouseenter", () => {
      gsap.to(button1, { scale: 1.03, boxShadow: "0 8px 20px rgba(0, 0, 0, 0.3)", duration: 0.3 });
    });
    button1.addEventListener("mouseleave", () => {
      gsap.to(button1, { scale: 1, boxShadow: "0 4px 15px rgba(0, 0, 0, 0.2)", duration: 0.3 });
    });

    // Button 2 animations
    const button2 = buttonRefs.button2.current;
    button2.addEventListener("mouseenter", () => {
      gsap.to(button2, { backgroundColor: "#555", color: "#fff", boxShadow: "0 8px 20px rgba(0, 0, 0, 0.3)", duration: 0.3 });
    });
    button2.addEventListener("mouseleave", () => {
      gsap.to(button2, { backgroundColor: "#333", color: "#fff", boxShadow: "0 4px 15px rgba(0, 0, 0, 0.2)", duration: 0.3 });
    });

    // Button 3 animations
    const button3 = buttonRefs.button3.current;
    const button3Overlay = buttonRefs.button3Overlay.current;
    gsap.set(button3Overlay, { xPercent: -100 });

    button3.addEventListener("mouseenter", () => {
      gsap.to(button3Overlay, { xPercent: 0, duration: 0.4, ease: "power2.out" });
      gsap.to(button3.querySelector(".text-content"), { color: "#fff", duration: 0.2 }); 
    });
    button3.addEventListener("mouseleave", () => {
      gsap.to(button3Overlay, { xPercent: 100, duration: 0.4, ease: "power2.in" });
      gsap.to(button3.querySelector(".text-content"), { color: "#fff", duration: 0.2 });
    });

    // Button 4 animations
    const button4 = buttonRefs.button4.current;
    const button4Border = buttonRefs.button4Border.current;
    gsap.set(button4Border, { scale: 0, opacity: 0, borderColor: "transparent" });

    button4.addEventListener("mouseenter", () => {
      gsap.to(button4Border, { scale: 1, opacity: 1, borderColor: "#00BCD4", duration: 0.3, ease: "power2.out" });
      gsap.to(button4.querySelector(".text-content"), { color: "#00BCD4", duration: 0.2 });
    });
    button4.addEventListener("mouseleave", () => {
      gsap.to(button4Border, { scale: 0, opacity: 0, borderColor: "transparent", duration: 0.3, ease: "power2.in" });
      gsap.to(button4.querySelector(".text-content"), { color: "#00BCD4", duration: 0.2 });
    });

    // Button 5 animations
    const button5 = buttonRefs.button5.current;
    const button5BgFill = buttonRefs.button5BgFill.current;
    gsap.set(button5BgFill, { scaleX: 0 });

    button5.addEventListener("mouseenter", () => {
      gsap.to(button5BgFill, { scaleX: 1, duration: 0.4, ease: "power2.out" });
      gsap.to(button5.querySelector(".text-content"), { color: "#fff", duration: 0.2 });
    });
    button5.addEventListener("mouseleave", () => {
      gsap.to(button5BgFill, { scaleX: 0, duration: 0.4, ease: "power2.in" });
      gsap.to(button5.querySelector(".text-content"), { color: "#fff", duration: 0.2 });
    });

    // Button 6 animations
    const button6 = buttonRefs.button6.current;
    button6.addEventListener("mouseenter", () => {
      gsap.to(button6, { rotate: 360, duration: 0.6, ease: "back.out(1.7)" });
    });
    button6.addEventListener("mouseleave", () => {
      gsap.to(button6, { rotate: 0, duration: 0.4, ease: "power2.out" });
    });

    // Button 7 animations
    const button7 = buttonRefs.button7.current;
    button7.addEventListener("mouseenter", () => {
      gsap.to(button7, { scale: 1.05, boxShadow: "0 8px 30px rgba(255, 255, 255, 0.15)", duration: 0.3 });
    });
    button7.addEventListener("mouseleave", () => {
      gsap.to(button7, { scale: 1, boxShadow: "0 4px 15px rgba(0, 0, 0, 0.2)", duration: 0.3 });
    });

    // Button 8 animations
    const button8 = buttonRefs.button8.current;
    button8.addEventListener("mouseenter", () => {
      gsap.to(button8, { backgroundColor: "#9C27B0", duration: 0.3 }); 
      gsap.fromTo(button8, { scale: 1 }, { scale: 1.02, duration: 0.2, ease: "power1.out" }); 

      gsap.fromTo(button8, {
        '--ripple-scale': 0,
        '--ripple-opacity': 0
      }, {
        '--ripple-scale': 4, 
        '--ripple-opacity': 0.5, 
        duration: 0.6,
        ease: "power2.out",
        onComplete: () => {
          gsap.to(button8, {
            '--ripple-opacity': 0,
            duration: 0.3,
            delay: 0.1,
            onComplete: () => {
              gsap.set(button8, { '--ripple-scale': 0 }); 
            }
          });
        }
      });
    });

    button8.addEventListener("mouseleave", () => {
      gsap.to(button8, { backgroundColor: "#7B1FA2", scale: 1, duration: 0.3 }); 
      gsap.to(button8, { '--ripple-opacity': 0, duration: 0.2 }); 
    });

    // Register custom GSAP plugin for CSS variables
    gsap.registerPlugin({
      name: "pseudo",
      init(target, vars) {
        this.target = target;
        this.vars = vars;
        this.prop = vars.prop;
      },
      render(progress, data) {
        const value = data.vars[data.prop] * progress;
        data.target.style.setProperty(`--${data.prop}`, value);
      }
    });

    gsap.set(button8, {
      '--ripple-scale': 0,
      '--ripple-opacity': 0
    });

    // Cleanup function
    return () => {
      // Remove all event listeners
      const buttons = Object.values(buttonRefs).filter(ref => ref.current).map(ref => ref.current);
      buttons.forEach(button => {
        button.replaceWith(button.cloneNode(true));
      });
    };
  }, []);

  return (
    <div className="button-container">
      <button ref={buttonRefs.button1} className="animated-button button-1">Our services</button>
      <button ref={buttonRefs.button2} className="animated-button button-2">Get in touch</button>
      <button ref={buttonRefs.button3} className="animated-button button-3">
        <span className="text-content">Learn More</span>
        <div ref={buttonRefs.button3Overlay} className="overlay"></div>
      </button>
      <button ref={buttonRefs.button4} className="animated-button button-4">
        <span className="text-content">View Details</span>
        <div ref={buttonRefs.button4Border} className="border-overlay"></div>
      </button>
      <button ref={buttonRefs.button5} className="animated-button button-5">
        <span className="text-content">Download Now</span>
        <div ref={buttonRefs.button5BgFill} className="bg-fill"></div>
      </button>
      <button ref={buttonRefs.button6} className="animated-button button-6">Go!</button>
      <button ref={buttonRefs.button7} className="animated-button button-7">Glass Button</button>
      <button ref={buttonRefs.button8} className="animated-button button-8">Liquid Ripple</button>
    </div>
  );
};

export default App;

App.css-: body {
  font-family: 'Inter', sans-serif;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-color: #000; 
  margin: 0;
  padding: 20px;
  box-sizing: border-box;
  color: #fff;
}

.App {
  text-align: center;
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
}

.button-container {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
  justify-content: center;
  max-width: 1200px;
}

.animated-button {
  padding: 16px 32px;
  border: none;
  font-size: 18px;
  font-weight: 500;
  cursor: pointer;
  outline: none;
  transition: box-shadow 0.3s ease;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
  min-width: 200px;
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden; 
}

.button-1 {
  background-color: #fff;
  color: #000;
  border-radius: 12px; 
}
.button-2 {
  background-color: #333;
  color: #fff;
  border-radius: 12px;
}

.button-3 {
  background-color: #6366F1; 
  color: #fff;
  border-radius: 9999px; 
}
.button-3 .overlay {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.15);
  transform: translateX(-100%);
  z-index: 0;
}

.button-4 {
  background-color: transparent;
  color: #00BCD4; 
  border: 2px solid #00BCD4;
  border-radius: 8px;
}
.button-4 .border-overlay {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 2px solid transparent;
  box-sizing: border-box;
  z-index: 0;
}

.button-5 {
  background-color: #FF5722; 
  color: #fff;
  border-radius: 8px;
}
.button-5 .text-content {
  position: relative;
  z-index: 2;
}
.button-5 .bg-fill {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #E64A19; 
  transform: scaleX(0);
  transform-origin: left;
  z-index: 1;
}

.button-6 {
  background-color: #4CAF50; 
  color: #fff;
  border-radius: 50%; 
  width: 80px; 
  height: 80px; 
  padding: 0;
  font-size: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.button-7 {
  background: rgba(255, 255, 255, 0.1); 
  color: #fff;
  border-radius: 12px;
  backdrop-filter: blur(10px); 
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.button-8 {
  background-color: #7B1FA2;
  color: #fff;
  border-radius: 8px;
}
.button-8::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 10px;
  height: 10px;
  background-color: rgba(255, 255, 255, 0.3); 
  border-radius: 50%;
  transform: translate(-50%, -50%) scale(var(--ripple-scale, 0)); 
  opacity: var(--ripple-opacity, 0);
  z-index: 0;
  pointer-events: none; 
}

@media (max-width: 768px) {
  .animated-button {
    padding: 14px 28px;
    font-size: 16px;
    min-width: 180px;
  }
  .button-6 {
    width: 70px;
    height: 70px;
    font-size: 14px;
  }
}

@media (max-width: 480px) {
  .animated-button {
    padding: 12px 24px;
    font-size: 15px;
    min-width: 150px;
  }
  .button-6 {
    width: 60px;
    height: 60px;
    font-size: 12px;
  }
}
